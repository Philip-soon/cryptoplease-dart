{
  "methods": [
    {
      "name": "getAccountInfo",
      "description": "Returns all information associated with the account of provided Pubkey",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [
        {
          "type": "string",
          "name": "pubKey",
          "description": "Pubkey of account to query, as base-58 encoded string",
          "url": null,
          "is_optional": false
        },
        {
          "type": "object",
          "name": "configuration",
          "description": "Configuration object containing the following optional\\nfields:",
          "url": null,
          "is_optional": true,
          "fields": [
            {
              "type": "Commitment",
              "name": "commitment",
              "description": "Commitment; \"processed\" is not supported. If parameter not provided, the default is \"finalized\".",
              "url": "https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment",
              "is_optional": true
            },
            {
              "type": "Encoding",
              "name": "encoding",
              "description": "encoding for Account data, either \"base58\" (slow), \"base64\"\"base64+zstd\"or \"jsonParsed\".\\n\"base58\" is limited to Account data of less than 129 bytes.\\n\"base64\" will return base64 encoded data for Account data of any size.\\n\"base64+zstd\" compresses the Account data using Zstandard and base64-encodes the result.\\n\"jsonParsed\" encoding attempts to use program-specific state parsers to return more human-readable and explicit account state data. If \"jsonParsed\" is requested but a parser cannot be found, the field falls back to \"base64\" encoding, detectable when the data field is type <string>.",
              "url": null,
              "is_optional": false
            },
            {
              "type": "object",
              "name": "dataSlice",
              "description": "limit the returned account data using the provided offset: <usize> and length: <usize> fields; only available for \"base58\"\"base64\" or \"base64+zstd\" encodings.",
              "url": null,
              "is_optional": true,
              "fields": [
                {
                  "type": "usize",
                  "name": "offset",
                  "description": "Start index for the data slice",
                  "url": null,
                  "is_optional": true
                },
                {
                  "type": "usize",
                  "name": "length",
                  "description": "Length of the data slice",
                  "url": null,
                  "is_optional": true
                }
              ]
            }
          ]
        }
      ],
      "result": {
        "type": "RpcResponse<Account>",
        "nullable": true,
        "description": "Account information associated with provided Pubkey or null if not found"
      }
    },
    {
      "name": "getBalance",
      "description": "Returns the balance of the account of provided Pubkey",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [
        {
          "type": "string",
          "name": "pubKey",
          "description": "Pubkey of account to query, as base-58 encoded string",
          "url": null,
          "is_optional": false
        },
        {
          "type": "CommitmentObject",
          "name": "commitment",
          "description": "Commitment; \"processed\" is not supported. If parameter not provided, the default is \"finalized\".",
          "url": "https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment",
          "is_optional": true
        }
      ],
      "result": {
        "type": "RpcResponse<u64>",
        "description": "Number of lamports assigned to pubKey"
      }
    },
    {
      "name": "getBlock",
      "description": "Returns identity and transaction information about a confirmed block in the ledger",
      "is_deprecated": false,
      "is_new": true,
      "parameters": [
        {
          "type": "u64",
          "name": "slot",
          "description": "slot, as u64 integer",
          "url": null,
          "is_optional": false
        },
        {
          "type": "object",
          "name": "configuration",
          "description": "Configuration object containing the following optional fields:",
          "url": null,
          "is_optional": true,
          "fields": [
            {
              "type": "Encoding",
              "name": "encoding",
              "description": "encoding for each returned Transaction, either \"json\"\"jsonParsed\"\"base58\" (slow), \"base64\". If parameter not provided, the default encoding is \"json\".\\n\"jsonParsed\" encoding attempts to use program-specific instruction parsers to return more human-readable and explicit data in the transaction.message.instructions list. If \"jsonParsed\" is requested but a parser cannot be found, the instruction falls back to regular JSON encoding (accounts, data, and programIdIndex fields).",
              "url": null,
              "is_optional": true
            },
            {
              "type": "string",
              "name": "transactionDetails",
              "description": "level of transaction detail to return, either \"full\"\"signatures\"or \"none\". If parameter not provided, the default detail level is \"full\".",
              "url": null,
              "is_optional": true
            },
            {
              "type": "bool",
              "name": "rewards",
              "description": "whether to populate the rewards array. If parameter not provided, the default includes rewards.",
              "url": null,
              "is_optional": true
            },
            {
              "type": "Commitment",
              "name": "commitment",
              "description": "Commitment; \"processed\" is not supported. If parameter not provided, the default is \"finalized\".",
              "url": "https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment",
              "is_optional": true
            }
          ]
        }
      ],
      "result": {
        "type": "Block",
        "nullable": true,
        "description": "A Block object if block is confirmed, and null otherwise"
      }
    },
    {
      "name": "getBlockHeight",
      "description": "Returns the current block height of the node",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [
        {
          "type": "CommitmentObject",
          "name": "commitment",
          "description": "Commitment; \"processed\" is not supported. If parameter not provided, the default is \"finalized\".",
          "url": "https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment",
          "is_optional": true
        }
      ],
      "result": {
        "type": "u64",
        "description": "Current block height"
      }
    },
    {
      "name": "getBlockProduction",
      "description": "Returns recent block production information from the current or previous epoch.",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [
        {
          "type": "object",
          "name": "configuration",
          "description": "Configuration object containing the following optional fields:",
          "url": null,
          "is_optional": true,
          "fields": [
            {
              "type": "Commitment",
              "name": "commitment",
              "description": "Commitment; \"processed\" is not supported. If parameter not provided, the default is \"finalized\".",
              "url": "https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment",
              "is_optional": true
            },
            {
              "type": "object",
              "name": "range",
              "description": "Slot range to return block production for. If parameter not provided, defaults to current epoch.",
              "url": null,
              "is_optional": true,
              "fields": [
                {
                  "type": "u64",
                  "name": "firstSlot",
                  "description": "first slot to return block production information for (inclusive)",
                  "url": null,
                  "is_optional": false
                },
                {
                  "type": "u64",
                  "name": "lastSlot",
                  "description": "last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot",
                  "url": null,
                  "is_optional": true
                }
              ]
            },
            {
              "type": "string",
              "name": "identity",
              "description": "Only return results for this validator identity (base-58 encoded)",
              "url": null,
              "is_optional": true
            }
          ]
        }
      ],
      "result": {
        "type": "RpcResponse<BlockProduction>",
        "description": "recent block production"
      }
    },
    {
      "name": "getBlockCommitment",
      "description": "Returns commitment for particular block",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [
        {
          "type": "u64",
          "name": "block",
          "description": "block, identified by Slot",
          "url": null,
          "is_optional": false
        }
      ],
      "result": {
        "type": "BlockCommitment",
        "nullable": true,
        "description": "Block commitment, or null if block is not found"
      }
    },
    {
      "name": "getBlocks",
      "description": "Returns a list of confirmed blocks between two slots",
      "is_deprecated": false,
      "is_new": true,
      "parameters": [
        {
          "type": "u64",
          "name": "startSlot",
          "description": "start_slot, as u64 integer",
          "url": null,
          "is_optional": false
        },
        {
          "type": "u64",
          "name": "endSlot",
          "description": "end_slot, as u64 integer",
          "url": null,
          "is_optional": true
        },
        {
          "type": "Commitment",
          "name": "commitment",
          "description": "Commitment; \"processed\" is not supported. If parameter not provided, the default is \"finalized\".",
          "url": "https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment",
          "is_optional": true
        }
      ],
      "result": {
        "type": "[]u64",
        "description": "An array of u64 integers listing confirmed blocks between start_slot and either end_slot, if provided, or latest confirmed block, inclusive. Max range allowed is 500,000 slots"
      }
    },
    {
      "name": "getBlocksWithLimit",
      "description": "Returns a list of confirmed blocks starting at the given slot",
      "is_deprecated": false,
      "is_new": true,
      "parameters": [
        {
          "type": "u64",
          "name": "startSlot",
          "description": "start_slot, as u64 integer",
          "url": null,
          "is_optional": false
        },
        {
          "type": "u64",
          "name": "limit",
          "description": "limit, as u64 integer",
          "url": null,
          "is_optional": false
        },
        {
          "type": "Commitment",
          "name": "commitment",
          "description": "Commitment; \"processed\" is not supported. If parameter not provided, the default is \"finalized\".",
          "url": "https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment",
          "is_optional": true
        }
      ],
      "result": {
        "type": "[]u64",
        "description": "The result field will be an array of u64 integers listing confirmed blocks starting at start_slot for up to limit blocks, inclusive."
      }
    },
    {
      "name": "getBlockTime",
      "description": "Returns the estimated production time of a block.",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [
        {
          "type": "u64",
          "name": "block",
          "description": "block, identified by Slot",
          "url": null,
          "is_optional": false
        }
      ],
      "result": {
        "type": "i64",
        "nullable": true,
        "description": "estimated production time, as Unix timestamp (seconds since the Unix epoch)"
      }
    },
    {
      "name": "getClusterNodes",
      "description": "Returns information about all the nodes participating in the cluster",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [],
      "result": {
        "type": "[]ClusterNode",
        "description": "Nodes participating in the cluster"
      }
    },
    {
      "name": "getEpochInfo",
      "description": "Returns information about the current epoch",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [
        {
          "type": "CommitmentObject",
          "name": "commitment",
          "description": "Commitment; \"processed\" is not supported. If parameter not provided, the default is \"finalized\".",
          "url": "https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment",
          "is_optional": true
        }
      ],
      "result": {
        "type": "EpochInfo",
        "description": "Current epoch information"
      }
    },
    {
      "name": "getEpochSchedule",
      "description": "Returns epoch schedule information from this cluster's genesis config",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [],
      "result": {
        "type": "EpochSchedule",
        "description": "Cluster epoch information"
      }
    },
    {
      "name": "getFeeCalculatorForBlockhash",
      "description": "Returns the fee calculator associated with the query blockhash, or null if the blockhash has expired",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [
        {
          "type": "string",
          "name": "blockhash",
          "description": "query blockhash as a Base58 encoded string",
          "url": null,
          "is_optional": false
        },
        {
          "type": "CommitmentObject",
          "name": "commitment",
          "description": "Commitment; \"processed\" is not supported. If parameter not provided, the default is \"finalized\".",
          "url": "https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment",
          "is_optional": true
        }
      ],
      "result": {
        "type": "FeeCalculator",
        "nullable": true,
        "description": "object describing the cluster fee rate at the queried blockhash"
      }
    },
    {
      "name": "getFeeRateGovernor",
      "description": "Returns the fee rate governor information from the root bank",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [],
      "result": {
        "type": "FeeRateGovernor",
        "description": "Fee rate governor information"
      }
    },
    {
      "name": "getFees",
      "description": "Returns a recent block hash from the ledger, a fee schedule that can be used to compute the cost of submitting a transaction using it, and the last slot in which the blockhash will be valid.",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [
        {
          "type": "CommitmentObject",
          "name": "commitment",
          "description": "Commitment; \"processed\" is not supported. If parameter not provided, the default is \"finalized\".",
          "url": "https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment",
          "is_optional": true
        }
      ],
      "result": {
        "type": "RpcResponse<Fees>",
        "description": "Recent block hash from the ledger"
      }
    },
    {
      "name": "getFirstAvailableBlock",
      "description": "Returns the slot of the lowest confirmed block that has not been purged from the ledger",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [],
      "result": {
        "type": "u64",
        "description": "Slot of the lowest confirmed block"
      }
    },
    {
      "name": "getGenesisHash",
      "description": "Returns the genesis hash",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [],
      "result": {
        "type": "string",
        "description": "Genesis hash"
      }
    },
    {
      "name": "getHealth",
      "description": "Returns the current health of the node.\n\nIf one or more --known-validator arguments are provided to solana-validator, \"ok\" is returned when the node has within HEALTH_CHECK_SLOT_DISTANCE slots of the highest known validator, otherwise an error is returned. \"ok\" is always returned if no known validators are provided.",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [],
      "result": {
        "type": "string|object",
        "description": "If the node is healthy: \"ok\" If the node is unhealthy, a JSON RPC error response is returned. The specifics of the error response are UNSTABLE and may change in the future"
      }
    },
    {
      "name": "getIdentity",
      "description": "Returns the identity pubkey for the current node",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [],
      "result": {
        "type": "Identity",
        "description": "The identity pubkey of the current node (as a base-58 encoded string)"
      }
    },
    {
      "name": "getInflationGovernor",
      "description": "Returns the current inflation governor",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [
        {
          "type": "CommitmentObject",
          "name": "commitment",
          "description": "Commitment; \"processed\" is not supported. If parameter not provided, the default is \"finalized\".",
          "url": "https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment",
          "is_optional": true
        }
      ],
      "result": {
        "type": "InflationGovernor",
        "description": "Current inflation rate governor"
      }
    },
    {
      "name": "getInflationRate",
      "description": "Returns the specific inflation values for the current epoch",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [],
      "result": {
        "type": "InflationRate",
        "description": "Inflation values for the current epoch"
      }
    },
    {
      "name": "getInflationReward",
      "description": "Returns the inflation reward for a list of addresses for an epoch",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [
        {
          "type": "[]string",
          "name": "addresses",
          "description": "An array of addresses to query, as base-58 encoded strings",
          "url": null,
          "is_optional": false
        }
      ],
      "result": {
        "type": "[]InflationReward",
        "description": "Inflation reward for a list of addresses for an epoch"
      }
    },
    {
      "name": "getLargestAccounts",
      "description": "Returns the 20 largest accounts, by lamport balance (results may be cached up to two hours)",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [
        {
          "type": "object",
          "name": "configuration",
          "description": "Configuration object containing the following optional fields:",
          "url": null,
          "is_optional": true,
          "fields": [
            {
              "type": "Commitment",
              "name": "commitment",
              "description": "Commitment; \"processed\" is not supported. If parameter not provided, the default is \"finalized\".",
              "url": "https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment",
              "is_optional": true
            },
            {
              "type": "CirculationStatus",
              "name": "filter",
              "description": "filter results by account type; currently supported: circulating|nonCirculating",
              "url": null,
              "is_optional": true
            }
          ]
        }
      ],
      "result": {
        "type": "RpcResponse<[]LargeAccount>",
        "description": "List of the 20 largest accounts"
      }
    },
    {
      "name": "getLeaderSchedule",
      "description": "Returns the leader schedule for an epoch",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [
        {
          "type": "u64",
          "name": "slot",
          "description": "Fetch the leader schedule for the epoch that corresponds to the provided slot.\\nIf unspecified, the leader schedule for the current epoch is fetched",
          "url": null,
          "is_optional": true
        },
        {
          "type": "object",
          "name": "configuration",
          "description": "Configuration object containing the following field:",
          "url": null,
          "is_optional": true,
          "fields": [
            {
              "type": "Commitment",
              "name": "commitment",
              "description": "Commitment; \"processed\" is not supported. If parameter not provided, the default is \"finalized\".",
              "url": "https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment",
              "is_optional": true
            },
            {
              "type": "string",
              "name": "identity",
              "description": "Only return results for this validator identity (base-58 encoded)",
              "url": null,
              "is_optional": true
            }
          ]
        }
      ],
      "result": {
        "type": "LeaderSchedule",
        "nullable": true,
        "description": "The result field will be a dictionary of validator identities, as base-58 encoded strings, and their corresponding leader slot indices as values (indices are relative to the first slot in the requested epoch) or null if the requested epoch is not found"
      }
    },
    {
      "name": "getMaxRetransmitSlot",
      "description": "Get the max slot seen from retransmit stage.",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [
        {
          "type": "u64",
          "name": "slot",
          "description": "Slot",
          "url": null,
          "is_optional": false
        }
      ],
      "result": {
        "type": "u64",
        "description": "Max slot seen from retransmit stage."
      }
    },
    {
      "name": "getMaxShredInsertSlot",
      "description": "Get the max slot seen from after shred insert.",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [],
      "result": {
        "type": "u64",
        "description": "Max slot seen from after shred insert."
      }
    },
    {
      "name": "getMinimumBalanceForRentExemption",
      "description": "Returns minimum balance required to make account rent exempt.",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [
        {
          "type": "usize",
          "name": "accountDataLength",
          "description": "account data length",
          "url": null,
          "is_optional": false
        },
        {
          "type": "CommitmentObject",
          "name": "commitment",
          "description": "Commitment; \"processed\" is not supported. If parameter not provided, the default is \"finalized\".",
          "url": "https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment",
          "is_optional": true
        }
      ],
      "result": {
        "type": "u64",
        "description": "Minimum lamports required in account\n"
      }
    },
    {
      "name": "getMultipleAccounts",
      "description": "Returns the account information for a list of Pubkeys",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [
        {
          "type": "[]string",
          "name": "pubKey",
          "description": "An array of PubKeys to query, as base-58 encoded strings",
          "url": null,
          "is_optional": false
        },
        {
          "type": "object",
          "name": "configuration",
          "description": "Configuration object containing the following optional fields:",
          "url": null,
          "is_optional": true,
          "fields": [
            {
              "type": "Commitment",
              "name": "commitment",
              "description": "Commitment; \"processed\" is not supported. If parameter not provided, the default is \"finalized\".",
              "url": "https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment",
              "is_optional": true
            },
            {
              "type": "Encoding",
              "name": "encoding",
              "description": "encoding for Account data, either \"base58\" (slow), \"base64\"\"base64+zstd\"or \"jsonParsed\".\\n\"base58\" is limited to Account data of less than 129 bytes.\\n\"base64\" will return base64 encoded data for Account data of any size.\\n\"base64+zstd\" compresses the Account data using Z standard and base64-encodes the result.\\n\"jsonParsed\" encoding attempts to use program-specific state parsers to return more human-readable and explicit account state data. If \"jsonParsed\" is requested but a parser cannot be found, the field falls back to \"base64\" encoding, detectable when the data field is type <string>.",
              "url": null,
              "is_optional": false
            },
            {
              "type": "object",
              "name": "dataSlice",
              "description": "limit the returned account data using the provided offset: <usize> and length: <usize> fields; only available for \"base58\"\"base64\" or \"base64+zstd\" encodings.",
              "url": null,
              "is_optional": true,
              "fields": [
                {
                  "type": "usize",
                  "name": "offset",
                  "description": "Start index for the data slice",
                  "url": null,
                  "is_optional": true
                },
                {
                  "type": "usize",
                  "name": "length",
                  "description": "Length of the data slice",
                  "url": null,
                  "is_optional": true
                }
              ]
            }
          ]
        }
      ],
      "result": {
        "type": "RpcResponse<[]Account>",
        "description": "Account information for requested PubKeys"
      }
    },
    {
      "name": "getProgramAccounts",
      "description": "Returns all accounts owned by the provided program Pubkey\n\n",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [
        {
          "type": "string",
          "name": "pubKey",
          "description": "Pubkey of program, as base-58 encoded string",
          "url": null,
          "is_optional": false
        },
        {
          "type": "object",
          "name": "configuration",
          "description": "Configuration object containing the following optional fields:",
          "url": null,
          "is_optional": true,
          "fields": [
            {
              "type": "Commitment",
              "name": "commitment",
              "description": "Commitment; \"processed\" is not supported. If parameter not provided, the default is \"finalized\".",
              "url": "https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment",
              "is_optional": true
            },
            {
              "type": "Encoding",
              "name": "encoding",
              "description": "encoding for Account data, either \"base58\" (slow), \"base64\"\"base64+zstd\"or \"jsonParsed\".\\n\"base58\" is limited to Account data of less than 129 bytes.\\n\"base64\" will return base64 encoded data for Account data of any size.\\n\"base64+zstd\" compresses the Account data using Z standard and base64-encodes the result.\\n\"jsonParsed\" encoding attempts to use program-specific state parsers to return more human-readable and explicit account state data. If \"jsonParsed\" is requested but a parser cannot be found, the field falls back to \"base64\" encoding, detectable when the data field is type <string>.",
              "url": null,
              "is_optional": false
            },
            {
              "type": "object",
              "name": "dataSlice",
              "description": "limit the returned account data using the provided offset: <usize> and length: <usize> fields; only available for \"base58\"\"base64\" or \"base64+zstd\" encodings.",
              "url": null,
              "is_optional": true,
              "fields": [
                {
                  "type": "usize",
                  "name": "offset",
                  "description": "Start index for the data slice",
                  "url": null,
                  "is_optional": true
                },
                {
                  "type": "usize",
                  "name": "length",
                  "description": "Length of the data slice",
                  "url": null,
                  "is_optional": true
                }
              ]
            },
            {
              "type": "[]Filter",
              "name": "filters",
              "description": "filter results using various filter objects; account must meet all filter criteria to be included in results",
              "url": null,
              "is_optional": true
            },
            {
              "type": "bool",
              "name": "withContext",
              "description": "wrap the result in an RpcResponse JSON object.",
              "url": null,
              "is_optional": true
            }
          ]
        }
      ],
      "result": {
        "type": "[]ProgramAccount|RpcResponse<[]ProgramAccount>",
        "description": "Program accounts matching the query. By default the result field will be an array of JSON objects. If withContext flag is set the array will be wrapped in an RpcResponse JSON object."
      }
    },
    {
      "name": "getRecentBlockhash",
      "description": "Returns a recent block hash from the ledger, and a fee schedule that can be used to compute the cost of submitting a transaction using it.",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [
        {
          "type": "CommitmentObject",
          "name": "commitment",
          "description": "Commitment; \"processed\" is not supported. If parameter not provided, the default is \"finalized\".",
          "url": "https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment",
          "is_optional": true
        }
      ],
      "result": {
        "type": "RpcResponse<RecentBlockhash>",
        "description": "Recent blockhash"
      }
    },
    {
      "name": "getRecentPerformanceSamples",
      "description": "Returns a list of recent performance samples, in reverse slot order. Performance samples are taken every 60 seconds and include the number of transactions and slots that occur in a given time window.",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [
        {
          "type": "usize",
          "name": "limit",
          "description": "number of samples to return (maximum 720)",
          "url": null,
          "is_optional": true
        }
      ],
      "result": {
        "type": "[]PerfSample",
        "description": "Performance samples"
      }
    },
    {
      "name": "getSnapshotSlot",
      "description": "Returns the highest slot that the node has a snapshot for",
      "is_deprecated": false,
      "is_new": false,
      "result": {
        "type": "u64",
        "description": "Snapshot slot"
      }
    },
    {
      "name": "getSignaturesForAddress",
      "description": "Returns confirmed signatures for transactions involving an address backwards in time from the provided signature or most recent confirmed block",
      "is_deprecated": false,
      "is_new": true,
      "parameters": [
        {
          "type": "string",
          "name": "pubKey",
          "description": "account address as base-58 encoded string",
          "url": null,
          "is_optional": false
        },
        {
          "type": "object",
          "name": "configuration",
          "description": "Configuration object containing the following fields:",
          "fields": [
            {
              "type": "int",
              "name": "limit",
              "description": "maximum transaction signatures to return (between 1 and 1,000, default: 1,000).",
              "url": null,
              "is_optional": true
            },
            {
              "type": "string",
              "name": "before",
              "description": "start searching backwards from this transaction signature. If not provided the search starts from the top of the highest max confirmed block.",
              "url": null,
              "is_optional": true
            },
            {
              "type": "string",
              "name": "until",
              "description": "search until this transaction signature, if found before limit reached.",
              "url": null,
              "is_optional": true
            },
            {
              "type": "Commitment",
              "name": "commitment",
              "description": "Commitment; \"processed\" is not supported. If parameter not provided, the default is \"finalized\".",
              "url": "https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment",
              "is_optional": true
            }
          ],
          "url": null,
          "is_optional": true
        }
      ],
      "result": {
        "type": "[]TransactionSignatureInformation",
        "description": "An array of transaction signature information, ordered from newest to oldest transaction"
      }
    },
    {
      "name": "getSignatureStatuses",
      "description": "Returns the statuses of a list of signatures. Unless the searchTransactionHistory configuration parameter is included, this method only searches the recent status cache of signatures, which retains statuses for all active slots plus MAX_RECENT_BLOCKHASHES rooted slots.",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [
        {
          "type": "[]string",
          "name": "signatures",
          "description": "An array of transaction signatures to confirm, as base-58 encoded strings",
          "url": null,
          "is_optional": false
        },
        {
          "type": "object",
          "name": "configuration",
          "description": "Configuration object containing the following field:",
          "url": null,
          "is_optional": true,
          "fields": [
            {
              "type": "bool",
              "name": "searchTransactionHistory",
              "description": "if true, a Solana node will search its ledger cache for any signatures not found in the recent status cache",
              "url": null,
              "is_optional": false
            }
          ]
        }
      ],
      "result": {
        "type": "RpcResponse<SignatureStatus>",
        "description": "RpcResponse JSON object with value field"
      }
    },
    {
      "name": "getSlot",
      "description": "Returns the slot that has reached the given or default commitment level",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [
        {
          "type": "CommitmentObject",
          "name": "commitment",
          "description": "Commitment; \"processed\" is not supported. If parameter not provided, the default is \"finalized\".",
          "url": "https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment",
          "is_optional": true
        }
      ],
      "result": {
        "type": "u64",
        "description": "Current slot"
      }
    },
    {
      "name": "getSlotLeader",
      "description": "Returns the current slot leader",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [
        {
          "type": "CommitmentObject",
          "name": "commitment",
          "description": "Commitment; \"processed\" is not supported. If parameter not provided, the default is \"finalized\".",
          "url": "https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment",
          "is_optional": true
        }
      ],
      "result": {
        "type": "string",
        "description": "Node identity Pubkey as base-58 encoded string"
      }
    },
    {
      "name": "getSlotLeaders",
      "description": "Returns the slot leaders for a given slot range",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [
        {
          "type": "u64",
          "name": "startSlot",
          "description": "Start slot, as u64 integer",
          "url": null,
          "is_optional": false
        },
        {
          "type": "u64",
          "name": "limit",
          "description": "Limit, as u64 integer",
          "url": null,
          "is_optional": false
        }
      ],
      "result": {
        "type": "[]string",
        "description": "Node identity public keys as base-58 encoded strings"
      }
    },
    {
      "name": "getStakeActivation",
      "description": "Returns epoch activation information for a stake account",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [
        {
          "type": "string",
          "name": "pubKey",
          "description": "Pubkey of stake account to query, as base-58 encoded string",
          "url": null,
          "is_optional": false
        },
        {
          "type": "object",
          "name": "configuration",
          "description": "Configuration object containing the following optional fields:",
          "url": null,
          "is_optional": true,
          "fields": [
            {
              "type": "Commitment",
              "name": "commitment",
              "description": "Commitment; \"processed\" is not supported. If parameter not provided, the default is \"finalized\".",
              "url": "https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment",
              "is_optional": true
            },
            {
              "type": "u64",
              "name": "epoch",
              "description": "epoch for which to calculate activation details. If parameter not provided, defaults to current epoch.",
              "url": null,
              "is_optional": true
            }
          ]
        }
      ],
      "result": {
        "type": "StakeActivation",
        "description": "Epoch activation information for a stake account"
      }
    },
    {
      "name": "getSupply",
      "description": "Returns information about the current supply.",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [
        {
          "type": "object",
          "name": "configuration",
          "description": "Configuration object containing the following optional fields:",
          "url": null,
          "is_optional": true,
          "fields": [
            {
              "type": "Commitment",
              "name": "commitment",
              "description": "Commitment; \"processed\" is not supported. If parameter not provided, the default is \"finalized\".",
              "url": "https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment",
              "is_optional": true
            },
            {
              "type": "bool",
              "name": "excludeNonCirculatingAccountsList",
              "description": "exclude non circulating accounts list from response",
              "url": null,
              "is_optional": true
            }
          ]
        }
      ],
      "result": {
        "type": "Supply",
        "description": "Information about the current supply"
      }
    },
    {
      "name": "getTokenAccountBalance",
      "description": "Returns the token balance of an SPL Token account.",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [
        {
          "type": "string",
          "name": "pubKey",
          "description": "Pubkey of Token account to query, as base-58 encoded string",
          "url": null,
          "is_optional": false
        },
        {
          "type": "CommitmentObject",
          "name": "commitment",
          "description": "Commitment; \"processed\" is not supported. If parameter not provided, the default is \"finalized\".",
          "url": "https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment",
          "is_optional": true
        }
      ],
      "result": {
        "type": "RpcResponse<TokenAmount>",
        "description": "Token balance for provided PubKey"
      }
    },
    {
      "name": "getTokenAccountsByDelegate",
      "description": "Returns all SPL Token accounts by approved Delegate.",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [
        {
          "type": "string",
          "name": "pubKey",
          "description": "Pubkey of account delegate to query, as base-58 encoded string",
          "url": null,
          "is_optional": false
        },
        {
          "type": "object",
          "name": "mintOrProgramId",
          "description": "Either a mint or a programId",
          "url": null,
          "is_optional": false,
          "fields": [
            {
              "type": "string",
              "name": "mint",
              "description": "Pubkey of the specific token Mint to limit accounts to, as base-58 encoded string; or",
              "url": null,
              "is_optional": true
            },
            {
              "type": "string",
              "name": "programId",
              "description": "Pubkey of the Token program ID that owns the accounts, as base-58 encoded string",
              "url": null,
              "is_optional": true
            }
          ]
        },
        {
          "type": "object",
          "name": "configuration",
          "description": "Configuration object containing the following optional fields:",
          "url": null,
          "is_optional": true,
          "fields": [
            {
              "type": "Commitment",
              "name": "commitment",
              "description": "Commitment; \"processed\" is not supported. If parameter not provided, the default is \"finalized\".",
              "url": "https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment",
              "is_optional": true
            },
            {
              "type": "Encoding",
              "name": "encoding",
              "description": "encoding for Account data, either \"base58\" (slow), \"base64\"\"base64+zstd\" or \"jsonParsed\".\\n\"jsonParsed\" encoding attempts to use program-specific state parsers to return more human-readable and explicit account state data. If \"jsonParsed\" is requested but a valid mint cannot be found for a particular account, that account will be filtered out from results.",
              "url": null,
              "is_optional": false
            },
            {
              "type": "object",
              "name": "dataSlice",
              "description": "limit the returned account data using the provided offset: <usize> and length: <usize> fields; only available for \"base58\"\"base64\" or \"base64+zstd\" encodings.",
              "url": null,
              "is_optional": true,
              "fields": [
                {
                  "type": "usize",
                  "name": "offset",
                  "description": "Start index for the data slice",
                  "url": null,
                  "is_optional": true
                },
                {
                  "type": "usize",
                  "name": "length",
                  "description": "Length of the data slice",
                  "url": null,
                  "is_optional": true
                }
              ]
            }
          ]
        }
      ],
      "result": {
        "type": "RpcResponse<[]ProgramAccount>",
        "description": "List of matching accounts"
      }
    },
    {
      "name": "getTokenAccountsByOwner",
      "description": "Returns all SPL Token accounts by token owner.",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [
        {
          "type": "string",
          "name": "pubKey",
          "description": "Pubkey of account owner to query, as base-58 encoded string",
          "url": null,
          "is_optional": false
        },
        {
          "type": "object",
          "name": "mintOrProgramId",
          "description": "Either a mint or a programId",
          "url": null,
          "is_optional": false,
          "fields": [
            {
              "type": "string",
              "name": "mint",
              "description": "Pubkey of the specific token Mint to limit accounts to, as base-58 encoded string; or",
              "url": null,
              "is_optional": true
            },
            {
              "type": "string",
              "name": "programId",
              "description": "Pubkey of the Token program ID that owns the accounts, as base-58 encoded string",
              "url": null,
              "is_optional": true
            }
          ]
        },
        {
          "type": "object",
          "name": "configuration",
          "description": "Configuration object containing the following optional fields:",
          "url": null,
          "is_optional": true,
          "fields": [
            {
              "type": "Commitment",
              "name": "commitment",
              "description": "Commitment; \"processed\" is not supported. If parameter not provided, the default is \"finalized\".",
              "url": "https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment",
              "is_optional": true
            },
            {
              "type": "Encoding",
              "name": "encoding",
              "description": "encoding for Account data, either \"base58\" (slow), \"base64\"\"base64+zstd\" or \"jsonParsed\".\\n\"jsonParsed\" encoding attempts to use program-specific state parsers to return more human-readable and explicit account state data. If \"jsonParsed\" is requested but a valid mint cannot be found for a particular account, that account will be filtered out from results.",
              "url": null,
              "is_optional": false
            },
            {
              "type": "object",
              "name": "dataSlice",
              "description": "limit the returned account data using the provided offset: <usize> and length: <usize> fields; only available for \"base58\"\"base64\" or \"base64+zstd\" encodings.",
              "url": null,
              "is_optional": true,
              "fields": [
                {
                  "type": "usize",
                  "name": "offset",
                  "description": "Start index for the data slice",
                  "url": null,
                  "is_optional": true
                },
                {
                  "type": "usize",
                  "name": "length",
                  "description": "Length of the data slice",
                  "url": null,
                  "is_optional": true
                }
              ]
            }
          ]
        }
      ],
      "result": {
        "type": "RpcResponse<[]ProgramAccount>",
        "description": "List of matching accounts"
      }
    },
    {
      "name": "getTokenLargestAccounts",
      "description": "Returns the 20 largest accounts of a particular SPL Token type.",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [
        {
          "type": "string",
          "name": "pubKey",
          "description": "Pubkey of token Mint to query, as base-58 encoded string",
          "url": null,
          "is_optional": false
        },
        {
          "type": "CommitmentObject",
          "name": "commitment",
          "description": "Commitment; \"processed\" is not supported. If parameter not provided, the default is \"finalized\".",
          "url": "https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment",
          "is_optional": true
        }
      ],
      "result": {
        "type": "RpcResponse<[]ProgramAccount>",
        "description": "List of matching accounts"
      }
    },
    {
      "name": "getTokenSupply",
      "description": "Returns the total supply of an SPL Token type.",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [
        {
          "type": "string",
          "name": "pubKey",
          "description": "Pubkey of token Mint to query, as base-58 encoded string",
          "url": null,
          "is_optional": false
        },
        {
          "type": "CommitmentObject",
          "name": "commitment",
          "description": "Commitment; \"processed\" is not supported. If parameter not provided, the default is \"finalized\".",
          "url": "https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment",
          "is_optional": true
        }
      ],
      "result": {
        "type": "RpcResponse<TokenAmount>",
        "description": "Total supply for the specified SPL token"
      }
    },
    {
      "name": "getTransaction",
      "description": "Returns transaction details for a confirmed transaction",
      "is_deprecated": false,
      "is_new": true,
      "parameters": [
        {
          "type": "string",
          "name": "signature",
          "description": "transaction signature as base-58 encoded string",
          "url": null,
          "is_optional": false
        },
        {
          "type": "object",
          "name": "configuration",
          "description": "Configuration object containing the following optional fields:",
          "url": null,
          "is_optional": true,
          "fields": [
            {
              "type": "Encoding",
              "name": "encoding",
              "description": "encoding for each returned Transaction, either \"json\"\"jsonParsed\"\"base58\" (slow), \"base64\". If parameter not provided, the default encoding is \"json\".\\n\"jsonParsed\" encoding attempts to use program-specific instruction parsers to return more human-readable and explicit data in the transaction.message.instructions list. If \"jsonParsed\" is requested but a parser cannot be found, the instruction falls back to regular JSON encoding (accounts, data, and programIdIndex fields).",
              "url": null,
              "is_optional": true
            },
            {
              "type": "Commitment",
              "name": "commitment",
              "description": "Commitment; \"processed\" is not supported. If parameter not provided, the default is \"finalized\".",
              "url": "https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment",
              "is_optional": true
            }
          ]
        }
      ],
      "result": {
        "type": "TransactionDetails",
        "nullable": true,
        "description": "Transaction details for a confirmed transaction or null if the transaction is not confirmed"
      }
    },
    {
      "name": "getTransactionCount",
      "description": "Returns the current Transaction count from the ledger",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [
        {
          "type": "CommitmentObject",
          "name": "commitment",
          "description": "Commitment; \"processed\" is not supported. If parameter not provided, the default is \"finalized\".",
          "url": "https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment",
          "is_optional": true
        }
      ],
      "result": {
        "type": "u64",
        "description": "count"
      }
    },
    {
      "name": "getVersion",
      "description": "Returns the current solana versions running on the node",
      "is_deprecated": false,
      "is_new": false,
      "result": {
        "type": "SolanaVersion",
        "description": "Version of solana running on this node"
      }
    },
    {
      "name": "getVoteAccounts",
      "description": "Returns the account info and associated stake for all the voting accounts in the current bank.",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [
        {
          "type": "object",
          "name": "configuration",
          "description": "Configuration object containing the following optional fields:",
          "url": null,
          "is_optional": true,
          "fields": [
            {
              "type": "Commitment",
              "name": "commitment",
              "description": "Commitment; \"processed\" is not supported. If parameter not provided, the default is \"finalized\".",
              "url": "https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment",
              "is_optional": true
            },
            {
              "type": "string",
              "name": "votePubKey",
              "description": "Only return results for this validator vote address (base-58 encoded)",
              "url": null,
              "is_optional": true
            },
            {
              "type": "bool",
              "name": "keepUnstakedDelinquents",
              "description": "Do not filter out delinquent validators with no stake",
              "url": null,
              "is_optional": true
            },
            {
              "type": "u64",
              "name": "delinquentSlotDistance",
              "description": "Specify the number of slots behind the tip that a validator must fall to be considered delinquent. NOTE: For the sake of consistency between ecosystem products, it is not recommended that this argument be specified.",
              "url": null,
              "is_optional": true
            }
          ]
        }
      ],
      "result": {
        "type": "VoteAccounts",
        "description": ""
      }
    },
    {
      "name": "minimumLedgerSlot",
      "description": "Returns the lowest slot that the node has information about in its ledger. This value may increase over time if the node is configured to purge older ledger data",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [],
      "result": {
        "type": "u64",
        "description": "Minimum ledger slot"
      }
    },
    {
      "name": "requestAirdrop",
      "description": "Requests an airdrop of lamports to a Pubkey",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [
        {
          "type": "string",
          "name": "pubKey",
          "description": "Pubkey of account to receive lamports, as base-58 encoded string",
          "url": null,
          "is_optional": false
        },
        {
          "type": "u64",
          "name": "lamports",
          "description": "lamports, as a u64",
          "url": null,
          "is_optional": false
        },
        {
          "type": "CommitmentObject",
          "name": "commitment",
          "description": "Commitment (used for retrieving blockhash and verifying airdrop success)",
          "url": "https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment",
          "is_optional": true
        }
      ],
      "result": {
        "type": "string",
        "description": "Transaction Signature of airdrop, as base-58 encoded string"
      }
    },
    {
      "name": "sendTransaction",
      "description": "Submits a signed transaction to the cluster for processing.\n\nThis method does not alter the transaction in any way; it relays the transaction created by clients to the node as-is.\n\nIf the node's rpc service receives the transaction, this method immediately succeeds, without waiting for any confirmations. A successful response from this method does not guarantee the transaction is processed or confirmed by the cluster.\n\nWhile the rpc service will reasonably retry to submit it, the transaction could be rejected if transaction's recent_blockhash expires before it lands.\n\nUse getSignatureStatuses to ensure a transaction is processed and confirmed.\n\nBefore submitting, the following preflight checks are performed:\n\nThe transaction signatures are verified\nThe transaction is simulated against the bank slot specified by the preflight commitment. On failure an error will be returned. Preflight checks may be disabled if desired. It is recommended to specify the same commitment and preflight commitment to avoid confusing behavior.\nThe returned signature is the first signature in the transaction, which is used to identify the transaction (transaction id). This identifier can be easily extracted from the transaction data before submission.",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [
        {
          "type": "string",
          "name": "transaction",
          "description": "fully-signed Transaction, as encoded string",
          "url": null,
          "is_optional": false
        },
        {
          "type": "object",
          "name": "configuration",
          "description": "Configuration object containing the following field:",
          "url": null,
          "is_optional": true,
          "fields": [
            {
              "type": "bool",
              "name": "skipPreflight",
              "description": "if true, skip the preflight transaction checks (default: false)",
              "url": null,
              "is_optional": false
            },
            {
              "type": "Commitment",
              "name": "preflightCommitment",
              "description": "Commitment level to use for preflight (default: \"finalized\").",
              "url": null,
              "is_optional": true
            },
            {
              "type": "Encoding",
              "name": "encoding",
              "description": "Encoding used for the transaction data. Either \"base58\" (slow, DEPRECATED), or \"base64\". (default: \"base58\").",
              "url": null,
              "is_optional": true
            },
            {
              "type": "usize",
              "name": "maxRetries",
              "description": "Maximum number of times for the RPC node to retry sending the transaction to the leader.\\nIf this parameter not provided, the RPC node will retry the transaction until it is finalized or until the blockhash expires.",
              "url": null,
              "is_optional": true
            }
          ]
        }
      ],
      "result": {
        "type": "string",
        "description": "First Transaction Signature embedded in the transaction, as base-58 encoded string (transaction id)"
      }
    },
    {
      "name": "simulateTransaction",
      "description": "Simulate sending a transaction",
      "is_deprecated": false,
      "is_new": false,
      "parameters": [
        {
          "type": "string",
          "name": "transaction",
          "description": "Transaction, as an encoded string. The transaction must have a valid blockhash, but is not required to be signed.",
          "url": null,
          "is_optional": false
        },
        {
          "type": "object",
          "name": "configuration",
          "description": "Configuration object containing the following fields:",
          "url": null,
          "is_optional": true,
          "fields": [
            {
              "type": "bool",
              "name": "sigVerify",
              "description": "if true the transaction signatures will be verified (default: false, conflicts with replaceRecentBlockhash)",
              "url": null,
              "is_optional": false
            },
            {
              "type": "Commitment",
              "name": "commitment",
              "description": "Commitment level to simulate the transaction at (default: \"finalized\").",
              "url": "https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment",
              "is_optional": true
            },
            {
              "type": "Encoding",
              "name": "encoding",
              "description": "Encoding used for the transaction data. Either \"base58\" (slow, DEPRECATED), or \"base64\". (default: \"base58\").",
              "url": null,
              "is_optional": true
            },
            {
              "type": "bool",
              "name": "replaceRecentBlockhash",
              "description": "if true the transaction recent blockhash will be replaced with the most recent blockhash.\\n(default: false, conflicts with sigVerify)",
              "url": null,
              "is_optional": true
            },
            {
              "type": "object",
              "name": "accounts",
              "description": "Accounts configuration object containing the following fields:",
              "url": null,
              "is_optional": true,
              "fields": [
                {
                  "type": "Encoding",
                  "name": "accountEncoding",
                  "description": "encoding for returned Account data, either  \"base64\" (default), \"base64+zstd\" or \"jsonParsed\".\\n\"jsonParsed\" encoding attempts to use program-specific state parsers to return more human-readable and explicit account state data. If \"jsonParsed\" is requested but a parser cannot be found, the field falls back to binary encoding, detectable when the data field is type <string>.",
                  "url": null,
                  "is_optional": true
                },
                {
                  "type": "[]string",
                  "name": "addresses",
                  "description": "An array of accounts to return, as base-58 encoded strings",
                  "url": null,
                  "is_optional": false
                }
              ]
            }
          ]
        }
      ],
      "result": {
        "type": "RpcResponse<TransactionStatus>",
        "description": "Transaction status"
      }
    },
    {
      "name": "getConfirmedBlock",
      "description": "Returns identity and transaction information about a confirmed block in the ledger",
      "is_deprecated": true,
      "is_new": false,
      "parameters": [
        {
          "type": "u64",
          "name": "slot",
          "description": "slot, as u64 integer",
          "url": null,
          "is_optional": false
        },
        {
          "type": "object",
          "name": "configuration",
          "description": "Configuration object containing the following optional fields:",
          "url": null,
          "is_optional": true,
          "fields": [
            {
              "type": "Encoding",
              "name": "encoding",
              "description": "encoding for each returned Transaction, either \"json\"\"jsonParsed\"\"base58\" (slow), \"base64\". If parameter not provided, the default encoding is \"json\".\\n\"jsonParsed\" encoding attempts to use program-specific instruction parsers to return more human-readable and explicit data in the transaction.message.instructions list. If \"jsonParsed\" is requested but a parser cannot be found, the instruction falls back to regular JSON encoding (accounts, data, and programIdIndex fields).",
              "url": null,
              "is_optional": true
            },
            {
              "type": "string",
              "name": "transactionDetails",
              "description": "level of transaction detail to return, either \"full\"\"signatures\"or \"none\". If parameter not provided, the default detail level is \"full\".",
              "url": null,
              "is_optional": true
            },
            {
              "type": "bool",
              "name": "rewards",
              "description": "whether to populate the rewards array. If parameter not provided, the default includes rewards.",
              "url": null,
              "is_optional": true
            },
            {
              "type": "Commitment",
              "name": "commitment",
              "description": "Commitment; \"processed\" is not supported. If parameter not provided, the default is \"finalized\".",
              "url": "https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment",
              "is_optional": true
            }
          ]
        }
      ],
      "result": {
        "type": "Block",
        "description": "Confirmed block object"
      }
    },
    {
      "name": "getConfirmedBlocks",
      "description": "Returns a list of confirmed blocks between two slots",
      "is_deprecated": true,
      "is_new": false,
      "parameters": [
        {
          "type": "u64",
          "name": "startSlot",
          "description": "start_slot, as u64 integer",
          "url": null,
          "is_optional": false
        },
        {
          "type": "u64",
          "name": "endSlot",
          "description": "end_slot, as u64 integer",
          "url": null,
          "is_optional": true
        },
        {
          "type": "Commitment",
          "name": "commitment",
          "description": "Commitment; \"processed\" is not supported. If parameter not provided, the default is \"finalized\".",
          "url": "https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment",
          "is_optional": true
        }
      ],
      "result": {
        "type": "[]u64",
        "description": "An array of u64 integers listing confirmed blocks between start_slot and either end_slot, if provided, or latest confirmed block, inclusive. Max range allowed is 500,000 slots."
      }
    },
    {
      "name": "getConfirmedBlocksWithLimit",
      "description": "Returns a list of confirmed blocks starting at the given slot",
      "is_deprecated": true,
      "is_new": false,
      "parameters": [
        {
          "type": "u64",
          "name": "startSlot",
          "description": "start_slot, as u64 integer",
          "url": null,
          "is_optional": false
        },
        {
          "type": "u64",
          "name": "limit",
          "description": "limit, as u64 integer",
          "url": null,
          "is_optional": false
        },
        {
          "type": "Commitment",
          "name": "commitment",
          "description": "Commitment; \"processed\" is not supported. If parameter not provided, the default is \"finalized\".",
          "url": "https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment",
          "is_optional": true
        }
      ],
      "result": {
        "type": "[]u64",
        "description": "An array of u64 integers listing confirmed blocks starting at start_slot for up to limit blocks, inclusive."
      }
    },
    {
      "name": "getConfirmedSignaturesForAddress2",
      "description": "Returns confirmed signatures for transactions involving an address backwards in time from the provided signature or most recent confirmed block\n\n",
      "is_deprecated": true,
      "is_new": false,
      "parameters": [
        {
          "type": "string",
          "name": "pubKey",
          "description": "account address as base-58 encoded string",
          "url": null,
          "is_optional": false
        },
        {
          "type": "object",
          "name": "configuration",
          "description": "Configuration object containing the following fields:",
          "url": null,
          "is_optional": true,
          "fields": [
            {
              "type": "int",
              "name": "limit",
              "description": "maximum transaction signatures to return (between 1 and 1,000, default: 1,000).",
              "url": null,
              "is_optional": true
            },
            {
              "type": "string",
              "name": "before",
              "description": "start searching backwards from this transaction signature. If not provided the search starts from the top of the highest max confirmed block.",
              "url": null,
              "is_optional": true
            },
            {
              "type": "string",
              "name": "until",
              "description": "search until this transaction signature, if found before limit reached.",
              "url": null,
              "is_optional": true
            },
            {
              "type": "Commitment",
              "name": "commitment",
              "description": "Commitment; \"processed\" is not supported. If parameter not provided, the default is \"finalized\".",
              "url": "https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment",
              "is_optional": true
            }
          ]
        }
      ],
      "result": {
        "type": "[]TransactionSignatureInformation",
        "description": "An array of transaction signature information, ordered from newest to oldest transaction"
      }
    },
    {
      "name": "getConfirmedTransaction",
      "description": "Returns transaction details for a confirmed transaction",
      "is_deprecated": true,
      "is_new": false,
      "parameters": [
        {
          "type": "string",
          "name": "signature",
          "description": "transaction signature as base-58 encoded string",
          "url": null,
          "is_optional": false
        },
        {
          "type": "object",
          "name": "configuration",
          "description": "Configuration object containing the following optional fields:",
          "url": null,
          "is_optional": true,
          "fields": [
            {
              "type": "Encoding",
              "name": "encoding",
              "description": "encoding for each returned Transaction, either \"json\"\"jsonParsed\"\"base58\" (slow), \"base64\". If parameter not provided, the default encoding is \"json\".\\n\"jsonParsed\" encoding attempts to use program-specific instruction parsers to return more human-readable and explicit data in the transaction.message.instructions list. If \"jsonParsed\" is requested but a parser cannot be found, the instruction falls back to regular JSON encoding (accounts, data, and programIdIndex fields).",
              "url": null,
              "is_optional": true
            },
            {
              "type": "Commitment",
              "name": "commitment",
              "description": "Commitment; \"processed\" is not supported. If parameter not provided, the default is \"finalized\".",
              "url": "https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment",
              "is_optional": true
            }
          ]
        }
      ],
      "result": {
        "type": "TransactionDetails",
        "nullable": true,
        "description": "Transaction details for said signature or null of not found"
      }
    }
  ]
}
